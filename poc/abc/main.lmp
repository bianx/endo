#!/bin/sh

trap 'rm -f /tmp/t.$$; exit 2' 1 2 15
awk '
BEGIN {
  pi = 3.141592653589793
  chain0 = "223333333344"
  nchain = 40
  R = 9.5
  nbeads = split(chain0, chain, "")
  nx = 30
  natom_types = 4
  nbond_types = 1
  Lx = 200
  dx = Lx / nx
  xlo = ylo = zlo = -Lx/2
  xhi = yhi = zhi = Lx/2
  zlo = -1
  zhi = 1
  m = 0
  l = 0
  for (i = 0; i < nx; i++)
      for (j = 0; j < nx; j++) {
	  x[l] = -L/2 + (i + 1/2) * dx
	  y[l] = -L/2 + (j + 1/2) * dx
	  z[l] = 0
	  type[l] = 1
	  mol[l] = 1
	  T[l] = 300
	  l++
      }
  for (i = 0; i < nchain; i++) {
      p = 2*pi*i/nchain
      add_chain(R * cos(p), R * sin(p), p)
  }
  nbonds = m
  natoms = l
  printf "LAMMPS\n"
  printf "%d atoms\n", natoms
  printf "%d bonds\n", nbonds
  printf "%d atom types\n", natom_types
  printf "%d bond types\n", nbond_types
  printf "%.16e %.16e xlo xhi\n", xlo, xhi
  printf "%.16e %.16e ylo yhi\n", ylo, yhi
  printf "%.16e %.16e zlo zhi\n", zlo, zhi
  printf "Atoms\n"
  printf "\n"
  for (l = 0; l < natoms; l++)
      printf "%d %d %.16e %.16e %.16e %d %.16e\n", l + 1, type[l], x[l], y[l], z[l], mol[l], T[l]
  printf "Bonds\n"
  printf "\n"
  for (i = 0; i < nbonds; i++)
      printf "%d %d %d %d\n", i + 1, 1, bnd0[i] + 1, bnd1[i] + 1
}

function add_chain(u, v, phi,   i) {
  for (i = 0; i < nbeads; i++) {
    x[l] = u + i * 1.2* dx * cos(phi)
    y[l] = v + i * 1.2* dx * sin(phi)
    z[l] = 0
    type[l] = chain[i + 1]
    if (i > 0) {
	bnd0[m] = l - 1
	bnd1[m] = l
	m++
    }
    l++
  }
}

' | tee ini.dat > /tmp/t.$$
lmp_serial -screen /dev/stderr < /tmp/t.$$ <<! |
boundary        p p p

dimension       2
units           metal
atom_style      hybrid bond dpd

read_data       /tmp/t.$$

comm_modify     mode single vel yes
mass            1 125.9
mass            2 125.9
mass            2 125.9
mass            3 125.9
mass            4 125.9

pair_style      dpd 300 8.6 245455
pair_coeff      1 1 0.070 1.42
pair_coeff      1 2 0.075 1.42
pair_coeff      1 3 0.075 1.42
pair_coeff      1 4 0.075 1.42
pair_coeff      2 2 0.075 1.42
pair_coeff      2 3 0.240 1.42
pair_coeff      2 4 0.075 1.42
pair_coeff      3 3 0.075 1.42
pair_coeff      3 4 0.240 1.42
pair_coeff      4 4 0.075 1.42

bond_style      harmonic
bond_coeff      1 0.1 3.0

neighbor        2.0 bin
neigh_modify    every 1 delay 0 check no once no

timestep        0.005

fix             2 all nve

dump            dump all custom 100 /dev/stdout x y type
run             10000
!
awk '
/^ITEM: TIMESTEP/ {
    if (f)
	printf "\n"
    f = 0
}
f {
    sub(/[ ]*$/, "")
    print
}
/^ITEM: ATOMS/ {
    f = 1
} '
rm -f /tmp/t.$$
